#+TITLE: Lilium
* Feature Goals
** TODO Multiple Inputs
*** Overview
- [ ] Org Mode
- [ ] JSX
- HTML
  - Toggle WYSIWYG with CKEditor
- [ ] Markdown
*** Discussion
**** Org Mode
**** JSX
Use a function to render markdown in between JSX. Much Simpler
**** HTML

**** Markdown
** TODO Notes will have Chat / Discussion
** TODO Notes will have an abstract field
This will be shown during search
** TODO Will Folders be Subpages or Folders?
- [ ] How to handle an index page?
  - Having title as index could have dupes
  - Just extract the folder content as the index page
** TODO Homepage will be an index page in the database written in JSX
That way I can do as I like but just edit the thing to do it all at runtime.
** TODO transclusion
Then we can write jsx as a note and transclude it as a widget!
* First Steps
** Layout
*** TODO Hide the dock on Mobile
** Schema
*** Tables
**** Notes
- id
- title
- abstract
- content
- syntax / syntax id (avoiding joins is simpler, just use ext as id)
- parent_id
- user_id
**** Tags
***** Tags
- id
- title
- parent_id
***** NoteTags
- tag_id
- note_id
*** Views
**** Notes With Number of Children
**** All Notes under a Tag
**** Search obviously
** Users
** Docker Container
** Modify Components Layout
*** TODO Move Stories Next to Components
Better LLM and in Place Docs
*** TODO Remove index exports
Minimizes need for deps in consuming libraries
* On the Fly
** TODO WAL on the DB
** TODO Dummy Data From Python
** TODO Create New Notes
** TODO Drop the note id search parameter and juse use the param =note/:id=
This will conflict with our need to preserve the `?sidebar=` searchParam (which is in turn useful for sending a link with a focused sidebar)
** TODO CRUD
*** TODO Folders
*** TODO Notes
** TODO Transitions
** TODO Sidebar needs to focus the note from the url
** TODO Sidebar transition is wrong.
** TODO Context Menu
** TODO Move the Sql into CRUD folders
** TODO Create associated.ts files with the server side function
** TODO Command Palette
*** TODO Links
*** TODO Fzf Notes
**** TODO Root
**** TODO Below
** TODO Vertical Breadcrumbs in the Menu
** TODO Journal in Sidebar
*** TODO Journal
*** TODO Tasks
** TODO Connect Discussion
** TODO Context Menu
Maybe just
** TODO Id's for focus instead of auto-focus hook
** TODO Remove the Background on Focus
** TODO Remove the Animations
** DONE Visiting a Note ID should move the Sidebar to it's parent id and select that itemkj
Logic for getting siblings was wrong.
** TODO Syntax Highlighting
** TODO Make the whole search result clickable
** DONE Auto focus on search
:LOGBOOK:
CLOCK: [2025-09-20 Sat 16:07]--[2025-09-20 Sat 16:53] =>  0:46
:END:
*** DONE Search
*** DONE Files
*** DONE Forward
*** DONE Back
*** DONE Related
** DONE getRecentNotes is not a function
:LOGBOOK:
CLOCK: [2025-09-20 Sat 17:00]--[2025-09-20 Sat 17:50] =>  0:50
:END:

Implement from scratch using

getRecentNotesQuery

** TODO Root Level Notes are considered as having no siblings
** TODO Preserve search on tab navigation
Just cache the search query and fire it again
** TODO Keyboard Navigation on Links
** TODO Context Menu on File Nav
** TODO Breadcrumbs in Search
:LOGBOOK:
CLOCK: [2025-09-20 Sat 13:51]--[2025-09-20 Sat 16:07] =>  2:16
:END:
** TODO follow Mode in sidebar
** DONE Add Typst
** DONE Add Transclusion
nope. Don't wanna deal with the rendering. Unless I can do it in SQL?
* Exemplar
Some writing

A list:

- foo
- bar
  - baz
  - bar
    - baz
      #+begin_src python results: output
def add(x: int) -> int:
    return x + 1

print(add(33))
      #+end_src

      #+RESULTS:
      : 33

  - bar
    - baz
- bar
  - baz
